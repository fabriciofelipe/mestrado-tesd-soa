package br.com.publicacao.webservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.16
 * 2017-04-17T12:29:52.032-03:00
 * Generated source version: 2.7.16
 * 
 */
@WebService(targetNamespace = "http://webservice.publicacao.com.br/", name = "PublicacoesWebService")
@XmlSeeAlso({ObjectFactory.class})
//@WebServiceClient(name = "PublicacoesWebService", 
//                  wsdlLocation = "http://localhost:8080/PublicacaoProducer/services/PublicacoesWebServicePort?wsdl",
//                  targetNamespace = "http://webservice.publicacao.com.br/") 
public class PublicacoesWebService extends Service {

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "excluirAutor", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.ExcluirAutor")
    @WebMethod(action = "urn:ExcluirAutor")
    @ResponseWrapper(localName = "excluirAutorResponse", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.ExcluirAutorResponse")
    public int excluirAutor(
        @WebParam(name = "arg0", targetNamespace = "")
        br.com.publicacao.webservice.Autor arg0
    );

	@WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "excluirPublicacao", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.ExcluirPublicacao")
    @WebMethod(action = "urn:ExcluirPublicacao")
    @ResponseWrapper(localName = "excluirPublicacaoResponse", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.ExcluirPublicacaoResponse")
    public int excluirPublicacao(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0
    );

	@WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "inserirAutor", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.InserirAutor")
    @WebMethod(action = "urn:InserirAutor")
    @ResponseWrapper(localName = "inserirAutorResponse", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.InserirAutorResponse")
    public int inserirAutor(
        @WebParam(name = "arg0", targetNamespace = "")
        br.com.publicacao.webservice.Autor arg0
    );

	@WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "buscarPublicacoes", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.BuscarPublicacoes")
    @WebMethod(action = "urn:BuscarPublicacoes")
    @ResponseWrapper(localName = "buscarPublicacoesResponse", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.BuscarPublicacoesResponse")
    public br.com.publicacao.webservice.Publicacao buscarPublicacoes(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

	@WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "buscarAutor", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.BuscarAutor")
    @WebMethod(action = "urn:BuscarAutor")
    @ResponseWrapper(localName = "buscarAutorResponse", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.BuscarAutorResponse")
    public br.com.publicacao.webservice.Autor buscarAutor(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

	@WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "alterarAutor", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.AlterarAutor")
    @WebMethod(action = "urn:AlterarAutor")
    @ResponseWrapper(localName = "alterarAutorResponse", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.AlterarAutorResponse")
    public int alterarAutor(
        @WebParam(name = "arg0", targetNamespace = "")
        br.com.publicacao.webservice.Autor arg0
    );

	@WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "isCPF", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.IsCPF")
    @WebMethod
    @ResponseWrapper(localName = "isCPFResponse", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.IsCPFResponse")
    public boolean isCPF(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

	@WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "inserirPublicacao", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.InserirPublicacao")
    @WebMethod(action = "urn:InserirPublicacao")
    @ResponseWrapper(localName = "inserirPublicacaoResponse", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.InserirPublicacaoResponse")
    public int inserirPublicacao(
        @WebParam(name = "arg0", targetNamespace = "")
        br.com.publicacao.webservice.Publicacao arg0
    );

	@WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "alterarPublicacao", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.AlterarPublicacao")
    @WebMethod(action = "urn:AlterarPublicacao")
    @ResponseWrapper(localName = "alterarPublicacaoResponse", targetNamespace = "http://webservice.publicacao.com.br/", className = "br.com.publicacao.webservice.AlterarPublicacaoResponse")
    public int alterarPublicacao(
        @WebParam(name = "arg0", targetNamespace = "")
        br.com.publicacao.webservice.Publicacao arg0
    );

	public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://webservice.publicacao.com.br/", "PublicacoesWebService");
    public final static QName PublicacoesWebServicePort = new QName("http://webservice.publicacao.com.br/", "PublicacoesWebServicePort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8080/PublicacaoProducer/services/PublicacoesWebServicePort?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(PublicacoesWebService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:8080/PublicacaoProducer/services/PublicacoesWebServicePort?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public PublicacoesWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PublicacoesWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PublicacoesWebService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PublicacoesWebService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PublicacoesWebService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PublicacoesWebService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns PublicacoesWebServicePortType
     */
//    @WebEndpoint(name = "PublicacoesWebServicePort")
    public PublicacoesWebServicePortType getPublicacoesWebServicePort() {
        return super.getPort(PublicacoesWebServicePort, PublicacoesWebServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PublicacoesWebServicePortType
     */
//    @WebEndpoint(name = "PublicacoesWebServicePort")
    public PublicacoesWebServicePortType getPublicacoesWebServicePort(WebServiceFeature... features) {
        return super.getPort(PublicacoesWebServicePort, PublicacoesWebServicePortType.class, features);
    }

}
